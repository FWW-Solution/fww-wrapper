# Github Workflow for Go
name: Go Continous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
jobs:
  lint:
    strategy:
      matrix:
        version: [{go: '1.21.1', golangci: 'latest'}]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go 1.21.1
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.1
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
           version: ${{ matrix.version.golangci }}
  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go 1.21.1
      uses: actions/setup-go@v4
      with:
        go-version: 1.21.1
        cache: false
    - name: Test
      run: make test
    
  scan:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go 1.21.1
      uses: actions/setup-go@v4
      with:
        go-version: 1.21.1
        cache: false
    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: ./internal/..

  # security-scanner:
  #   needs: lint-test
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Check out code into the Go module directory
  #     uses: actions/checkout@v4
  #   - name: Security Scan
  #     uses: securego/gosec@master
  #     with:
  #       # we let the report trigger content trigger a failure using the GitHub Security features.
  #       args: '-no-fail -fmt sarif -out results.sarif ./...'
  #   - name: Upload SARIF file
  #     uses: github/codeql-action/upload-sarif@v2
  #     with:
  #       # Path to SARIF file relative to the root of the repository
  #       sarif_file: results.sarif